name: Docker Image CI

on: 
  push:
    branches:    
      - master
    tags:
      - release.*
env:
  GIT_SHA: ${{ github.sha }}
  DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY || ('docker.pkg.github.com/'+ github.repository ) }}
  DOCKER_REGISTRY_HOST: ${{ secrets.DOCKER_REGISTRY_HOST || 'docker.pkg.github.com' }}

jobs:
     
  modified-folders:    
    runs-on: ubuntu-latest
    env:
      ALL: ${{secrets.ALL}}
    
    steps:
      - uses: actions/checkout@v1
      - name: create file list
        run: git diff-tree --no-commit-id --name-only -r $GIT_SHA > files.txt
      - name: extract folders
        shell: python
        run: |
          import os
          if os.getenv('ALL', 'False').lower() in ['1', 'true', 'y']:
            folders = [f for f in os.listdir('.') if os.path.isdir(f) ]
          else:
            files = open('files.txt', 'r').readlines()
            folders = [ s.strip().split('/')[0] for s in files if '/' in s]
            folders = list(set(folders))
          folders = [ s for s in folders if os.path.isfile(s+'/Dockerfile')]
          folders.append('xenial-jdk-ant')
          
          if len(folders)!=0:
            print('Found folders: ', folders)
            open('folders.txt', 'w').writelines( (f+'\n') for f in folders )
          else:
            print('Nothing to build')
            import sys
            sys.exit(1)
          
      - name: upload folder list
        uses: actions/upload-artifact@v1
        with:
          name: folder-list
          path: folders.txt
  build:

    runs-on: ubuntu-latest
    needs: modified-folders

    steps:
    - uses: actions/checkout@v1
    - name: get folder list
      uses: actions/download-artifact@v1
      with:
        name: folder-list

    - name: Login to GitHub Docker Registry      
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME || github.actor }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD || secrets.GITHUB_TOKEN }}
      run: docker login $DOCKER_REGISTRY_HOST --username $DOCKER_USERNAME --password $DOCKER_PASSWORD  

    - name: Build the images
      run: |
        env
        echo "Will build these directories:"
        cat folder-list/folders.txt
        echo '=================='        
        while read f; do 
          TAG=$DOCKER_REGISTRY/$f
          VER=$(date +%F)-${GIT_SHA::8}
          echo '==================='
          echo Folder $f, will be tagged as $TAG:$VER
          docker build $f/ --tag $TAG:$VER --tag $TAG:latest
          docker history $TAG:$VER
          docker push $TAG:$VER
          docker push $TAG:latest  
        done < folder-list/folders.txt
        
         
      
