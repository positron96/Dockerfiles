#!/bin/sh

#exec 1>&2

SELF=$(basename "$0")
DIR=$(dirname "$0")

VER_FILE="/dev/stdout"
COMMIT=HEAD
REPO="."

while getopts ":f:d:c:h" opt; do
  case $opt in
  h) echo "usage: $SELF -f <output filename, default stdout> -d <repo directory, default .>  -c <git commit, default HEAD>"; exit 0 ;;
  f) VER_FILE=$OPTARG ;;
  d) REPO=$OPTARG ;;
  c) COMMIT=$OPTARG ;;
  \?) echo "Invalid Option: -$OPTARG" 1>&2; exit 1 ;;
  :) echo "Invalid Option: -$OPTARG requires an argument" 1>&2; exit 1 ;;
  esac
done


DATE=$(git -C $REPO show --format="%cd" --date=short -s $COMMIT)
DATE_SHORT=$(git -C $REPO show --format="%cd" --date=format:%Y%m%d -s $COMMIT)
HASH=$(git -C $REPO show --format="%h" -s $COMMIT)
TAG=$(git -C $REPO describe --tags $COMMIT | sed 's/-g[a-z0-9]\{7\}//')
VER_SHORT="${DATE_SHORT}-$HASH"
if [ ! -z "$TAG" ]; then
    VER_SHORT="$VER_SHORT-$(echo $TAG | tr '\\' '_')"
fi
BUILD_DATE=$(date '+%F %T' --utc)


case $SELF in
  ver_h) 
    echo "#pragma once" > $VER_FILE
    echo "#define GIT_DATE \"$DATE\"" >> $VER_FILE
    echo "#define GIT_HASH \"$HASH\"" >> $VER_FILE
    echo "#define GIT_TAG \"$TAG\"">> $VER_FILE
    echo "#define GIT_VER_SHORT \"$VER_SHORT\"" >> $VER_FILE
    echo "#define BUILD_DATE \"$BUILD_DATE\"" >> $VER_FILE
  ;;
  ver_py)
    echo "# autogenerated. do not edit " > $VER_FILE
    echo "GIT_DATE = \"$DATE\"" >> $VER_FILE
    echo "GIT_HASH = \"$HASH\"" >> $VER_FILE
    echo "GIT_TAG = \"$TAG\"">> $VER_FILE
    echo "GIT_VER_SHORT = \"$VER_SHORT\"">> $VER_FILE
    echo "BUILD_DATE = \"$BUILD_DATE\"" >> $VER_FILE
  ;;
  ver_txtshort)
    echo $VER_SHORT > $VER_FILE
  ;;

esac
